public class SpiderController: MonoBehaviour
{
    public float speed = 5;
    public float gravity = -5;
    public GameObject Camera;
    public float minAngle = -45;
    public float maxAngle = 45;

    float velocityY = 0;

    CharacterController controller;
    private bool isGrounded;

    void Start()
    {
        controller = GetComponent<CharacterController>();
    }

    void Update()
    {
        velocityY += gravity * Time.deltaTime;

        Vector3 input = new Vector3(Input.GetAxisRaw("Horizontal"), 0, Input.GetAxisRaw("Vertical"));
        input = input.normalized;

        Vector3 temp = Vector3.zero;
        if (input.z == 1)
        {
            temp += transform.forward;
        }
        else if (input.z == -1)
        {
            temp += transform.forward * -1;
        }

        if (input.x == 1)
        {
            temp += transform.right;
        }
        else if (input.x == -1)
        {
            temp += transform.right * -1;
        }

        Vector3 velocity = temp * speed;
        velocity.y = velocityY;

        controller.Move(velocity * Time.deltaTime);

        if (controller.isGrounded)
        {
            velocityY = 0;
        }

        //controls for looking around with mouse
        float mouseInputX = Input.GetAxis("Mouse X");
        Vector3 lookhereX = new Vector3(0, mouseInputX, 0);
        transform.Rotate(lookhereX);

        float mouseInputY = Input.GetAxis("Mouse Y");
        mouseInputY = Mathf.Clamp (mouseInputY,minAngle, maxAngle);
        Vector3 lookhereY = new Vector3(mouseInputY, 0, 0);
        Camera.transform.Rotate (-lookhereY);
        //need to edit and give angle restrictions
       
    }

}
